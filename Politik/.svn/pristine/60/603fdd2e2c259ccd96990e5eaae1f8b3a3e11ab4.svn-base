package com.saganet.politik.components.diaD;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;

import com.saganet.politik.beans.seguridad.Usuario;
import com.saganet.politik.database.administracion.UsuarioEO;
import com.saganet.politik.database.catalogos.SeccionEO;
import com.saganet.politik.database.diaD.MovilizadoEO;
import com.saganet.politik.database.diaD.MovilizadorEO;
import com.saganet.politik.dominios.DiaDBusquedasDO;
import com.saganet.politik.modelos.Modelo;

@Component("DiaDMovilizados")
public class MovilizadosC {
	private static final Logger logger = LoggerFactory.getLogger(MovilizadosC.class);
	
	@Autowired
	SqlSession sqlSession;

	public UsuarioEO getUsuario() {
		return ((Usuario) SecurityContextHolder.getContext().getAuthentication().getPrincipal()).getUsuario();
	}
	
	public Modelo<MovilizadoEO> modelo(MovilizadorEO movlilizador){
		logger.debug("Movilizador: {}",movlilizador);
		if (movlilizador==null) {
			movlilizador=sqlSession.selectOne("diaD.capturaMovilizador.buscarPorNick",getUsuario().getNick());
		}
		logger.debug("Movilizador2: {}",movlilizador);
		List<MovilizadoEO> listado=sqlSession.selectList("diaD.movilizado.listadoPorMovilizador",movlilizador.getId());
		logger.debug("listado : {}",listado);
		return new Modelo<>(listado);
	}

	public Modelo<MovilizadoEO> busquedasModelo(MovilizadorEO movlilizador, DiaDBusquedasDO tipo, String nombre, String primerApellido, String segundoApellido, String folio, String seccion){
		List<MovilizadoEO> listado=new ArrayList<>();
		HashMap<String, Object> mapa=new HashMap<>();
		switch (tipo) {
			case POR_FOLIO:
				listado=sqlSession.selectList("diaD.movilizado.buscarPorFolio",Integer.parseInt(!folio.equals("")?folio:"0"));
			break;
			case POR_SECCION:
				mapa.put("seccion", Integer.parseInt(!seccion.equals("")?seccion:"0"));
				mapa.put("programa", movlilizador.getPrograma());
				listado=sqlSession.selectList("diaD.movilizado.buscarPorSeccion",mapa);				
			break;
			case POR_NOMBRE:
				mapa.put("nombre", nombre);
				mapa.put("primerApellido", primerApellido);
				mapa.put("segundoApellido", segundoApellido);
				mapa.put("programa", movlilizador.getPrograma());
				listado=sqlSession.selectList("diaD.movilizado.buscarPorNombre",mapa);	
			break;
		}
		logger.debug("listado : {}",listado);
		return new Modelo<>(listado);
	}
	
	public void guardarMovilizado(MovilizadoEO movilizado){
		logger.debug("movilizado : {}",movilizado);
		movilizado.setId(null);
		sqlSession.insert("diaD.movilizado.insert",movilizado);
	}
	
	public Modelo<MovilizadoEO> modeloPorSeccion(SeccionEO seccion){
		HashMap<String, Object> mapa;
		List<MovilizadoEO> movilizados;
		
		mapa = new HashMap<>();
		
		mapa.put("seccion", seccion);
		movilizados = sqlSession.selectList("diaD.movilizado.porSeccion_jornada", mapa);
		
		return new Modelo<>(movilizados);
		
	}
	
}
