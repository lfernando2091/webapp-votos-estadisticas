package com.saganet.politik.components.diaD.reportes;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.webflow.execution.RequestContext;

import com.saganet.politik.database.catalogos.GeozonaParticionEO;
import com.saganet.politik.database.catalogos.MunicipioEO;
import com.saganet.politik.database.catalogos.SeccionEO;
import com.saganet.politik.dominios.NivelReporteCompletoDO;
import com.saganet.politik.dominios.TiposColumnaDO;
import com.saganet.politik.modelos.Modelo;
import com.saganet.politik.utilidades.Columna;

@Component("diaDReportesMetasJornada")
public class MetasJornadaC {
	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(MetasJornadaC.class);
	
	@Autowired SqlSession sqlSession;
	
	@SuppressWarnings("unchecked")
	public HashMap<String, Object> metasJornada(RequestContext rc){
		List<HashMap<String, Object>> listado;
		HashMap<String, Object> mapa, parametros, viewScope;
		List<Columna> columnas; 
		NivelReporteCompletoDO nivel;
		Modelo<NivelReporteCompletoDO> modeloNiveles;
		Modelo<GeozonaParticionEO> modeloRegiones;
		Modelo<MunicipioEO> modeloMunicipios;
		Modelo<SeccionEO> modeloSecciones;
		
		
		mapa = new HashMap<>();
		parametros = new HashMap<>();
		columnas = new ArrayList<>();
		viewScope = (HashMap<String, Object>) rc.getViewScope().asMap();
		modeloNiveles = (Modelo<NivelReporteCompletoDO>) viewScope.get("modeloNiveles");
		modeloRegiones = (Modelo<GeozonaParticionEO>) viewScope.get("modeloRegiones");
		modeloMunicipios = (Modelo<MunicipioEO>) viewScope.get("modeloMunicipios");
		modeloSecciones = (Modelo<SeccionEO>) viewScope.get("modeloSecciones");
		
		listado = null;
		parametros.put("grupo", viewScope.get("grupo"));
		nivel = modeloNiveles.getSeleccionado();
		switch(nivel){
		case GENERAL:
			listado = sqlSession.selectList("diaD.reportes.metasJornada.general", parametros);
			columnas.add(new Columna("Entidad", "entidad", TiposColumnaDO.TEXTO));
			columnas.add(new Columna("Registrados", "registrados", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("No Registrados", "no_registrados", TiposColumnaDO.ENTERO));
			break;
		case ESTATAL:
			listado = sqlSession.selectList("diaD.reportes.metasJornada.estatal", parametros);
			columnas.add(new Columna("idRegión", "region", TiposColumnaDO.TEXTO));
			columnas.add(new Columna("Región", "nombre_region", TiposColumnaDO.TEXTO));
			columnas.add(new Columna("Registrados", "registrados", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("No Registrados", "no_registrados", TiposColumnaDO.ENTERO));
			break;
		case REGION:
			parametros.put("idRegion", modeloRegiones.getSeleccionado().getIdParticion());
			listado = sqlSession.selectList("diaD.reportes.metasJornada.region", parametros);
			columnas.add(new Columna("idMunicipio", "municipio", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("Municipio", "nombre_municipio", TiposColumnaDO.TEXTO));
			columnas.add(new Columna("Registrados", "registrados", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("No Registrados", "no_registrados", TiposColumnaDO.ENTERO));
			break;
		case MUNICIPIO:
			parametros.put("idMunicipio", modeloMunicipios.getSeleccionado().getIdMunicipio());
			listado = sqlSession.selectList("diaD.reportes.metasJornada.municipio", parametros);
			columnas.add(new Columna("Sección", "seccion", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("Registrados", "registrados", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("No Registrados", "no_registrados", TiposColumnaDO.ENTERO));
			break;
		case SECCION:
			parametros.put("idSeccion", modeloSecciones.getSeleccionado().getIdSeccion());
			listado = sqlSession.selectList("diaD.reportes.metasJornada.seccion", parametros);
			columnas.add(new Columna("Registrados", "registrados", TiposColumnaDO.ENTERO));
			columnas.add(new Columna("No Registrados", "no_registrados", TiposColumnaDO.ENTERO));
			break;
		}
		
		mapa.put("modeloMetas", new Modelo<>(listado));
		mapa.put("columnas", columnas);
		
		return mapa;
	}
}
