package com.saganet.politik.components.encuestas.captura;

import java.util.HashMap;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.saganet.politik.components.encuestas.admin.CampaniasC;
import com.saganet.politik.database.encuestas.admin.PreguntaEO;
import com.saganet.politik.database.encuestas.captura.ContactoEO;
import com.saganet.politik.database.encuestas.captura.CuestionarioEO;
import com.saganet.politik.dominios.EstatusCuestionarioDO;

@Component("CuestionarioC")
public class CuestionarioC {
	
	private static final Logger logger = LoggerFactory.getLogger(CuestionarioC.class);
	
	@Autowired
	CampaniasC campaniaC;
	
	@Autowired
	SqlSession sqlSession;
	
	public CuestionarioEO cuestionarioByNick(){
		String nick;
		nick = "admin";
		CuestionarioEO cuestionario;
		ContactoEO contacto;
		
		cuestionario = new CuestionarioEO();
		cuestionario.setCampania(campaniaC.campaniaCompetaByNick(nick));
		
		contacto = sqlSession.selectOne("encuestas.captura.cuestionario.contactoByEstatus", cuestionario.getCampania().getTablaContactos());
		cuestionario.setContacto(contacto);
		
		logger.debug("CuestionarioByNick: {}", cuestionario);
		
		return cuestionario;
	}
	
	public void guardarCuestionario(CuestionarioEO cuestionario){
		
		HashMap<String, Object> params;
		StringBuilder camposPreguntas;
		StringBuilder camposRespuestas;
		
		camposPreguntas = new StringBuilder();
		camposRespuestas = new StringBuilder();
		
		for(PreguntaEO pregunta : cuestionario.getCampania().getEncuesta().getPreguntas()){
			camposPreguntas.append("_"+pregunta.getConsecutivoPregunta()+",");
		}
		
		for(PreguntaEO pregunta : cuestionario.getCampania().getEncuesta().getPreguntas()){
			camposRespuestas.append("'"+pregunta.getRespuesta()+"',");
		}
		
		logger.debug("cuestionario: {}", cuestionario);
		
		params = new HashMap<>();
		params.put("cuestionario", cuestionario);
		params.put("camposPreguntas", camposPreguntas);
		params.put("camposRespuestas", camposRespuestas);
		
		try{
			sqlSession.insert("encuestas.captura.cuestionario.insertar", params);
		}catch(Exception e){
			logger.debug("Error al guardat el cuestionario: {}", e.getCause());
		}
		
	}
	
	public void cancelarCuestionario(ContactoEO contacto){
		logger.debug("contacto: {}", contacto);
	}
	
	public EstatusCuestionarioDO[] estatusCuestionario(){
		return EstatusCuestionarioDO.values();
	}
	
}
