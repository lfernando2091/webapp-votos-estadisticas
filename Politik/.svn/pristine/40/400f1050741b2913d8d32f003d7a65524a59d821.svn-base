package com.saganet.politik.components.utilidades;

import java.util.Arrays;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.saganet.politik.dominios.TiposRepresentanteDO;
import com.saganet.politik.dominios.AmbitosDO;
import com.saganet.politik.dominios.MesDO;
import com.saganet.politik.dominios.NivelesDO;
import com.saganet.politik.dominios.TiposEleccionDO;
import com.saganet.politik.modelos.Modelo;


@Component("UtilidadesDominiosC")
public class DominiosC {
	private static final Logger logger = LoggerFactory.getLogger(DominiosC.class);
	
	@Autowired
	SqlSession sqlSession;
	
	public Modelo<TiposEleccionDO> modeloTiposEleccion(){
		Modelo<TiposEleccionDO> modelo;
		List<TiposEleccionDO> listado;
		
		modelo = new Modelo<TiposEleccionDO>();
		
		listado = Arrays.asList(TiposEleccionDO.values());
		modelo.setListado(listado);
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Se obtiene listado TiposEleccionDO: {}", listado);
		return modelo;
	}
	
	public Modelo<TiposRepresentanteDO> modeloTiposRepresentante(){
		Modelo<TiposRepresentanteDO> modelo;
		List<TiposRepresentanteDO> listado;
		
		modelo = new Modelo<TiposRepresentanteDO>();
		
		listado = Arrays.asList(TiposRepresentanteDO.values());
		modelo.setListado(listado);
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Se obtiene listado TipoRepresentanteDO: {}", listado);
		return modelo;
	}
	
	public Modelo<MesDO> modeloMeses(){
		Modelo<MesDO> modelo;
		List<MesDO> listado;
		
		modelo = new Modelo<MesDO>();
		
		listado = Arrays.asList(MesDO.values());
		modelo.setListado(listado);
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Se obtiene listado MesesDO: {}", listado);
		return modelo;
	}
	
	public Modelo<NivelesDO> modeloNiveles(){
		Modelo<NivelesDO> modelo;
		List<NivelesDO> listado;
		
		modelo = new Modelo<NivelesDO>();
		
		listado = Arrays.asList(NivelesDO.values());
		modelo.setListado(listado);
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Se obtiene listado NivelesDO: {}", listado);
		return modelo;
	}
	
	public Modelo<AmbitosDO> modeloAmbitos(){
		Modelo<AmbitosDO> modelo;
		List<AmbitosDO> listado;
		
		modelo = new Modelo<AmbitosDO>();
		
		listado = Arrays.asList(AmbitosDO.values());
		modelo.setListado(listado);
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Se obtiene listado AmbitosDO: {}", listado);
		return modelo;
	}
}
