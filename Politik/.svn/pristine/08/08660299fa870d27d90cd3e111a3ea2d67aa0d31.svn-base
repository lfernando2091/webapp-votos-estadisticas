package com.saganet.politik.components.catalogos;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.saganet.politik.database.catalogos.DependenciaEO;
import com.saganet.politik.database.catalogos.ProgramaEO;
import com.saganet.politik.database.catalogos.ProgramaEjercicioEO;
import com.saganet.politik.modelos.Modelo;

@Component("ProgramasC")
public class ProgramasC {
	
	@Autowired
	SqlSession sqlSession;
	
	@Autowired
	ProgramasEjerciciosC programasEjerciciosC;
	
	private static final Logger logger = LoggerFactory.getLogger(ProgramasC.class);
	
	public Modelo<ProgramaEO> modelo(){
		Modelo<ProgramaEO> modelo;
		List<ProgramaEO> listado;
		
		listado = sqlSession.selectList("catalogos.programas.listado");
		logger.debug("Listado Programas: {}", listado);
		
		modelo = new Modelo<>();
		modelo.setListado(listado);
		
		if(!listado.isEmpty()){
			modelo.setSeleccionado(listado.get(0));
		}
		
		logger.debug("Modelo Programas: {}", modelo);
		
		return modelo;
	}
	
	public ProgramaEO nuevo(){
		ProgramaEO nuevo;
		nuevo = new ProgramaEO();
		nuevo.setEstrategia(0);
		return nuevo;
	}
	
	public ProgramaEO guardar(ProgramaEO nuevo, Integer idDependencia){
		logger.debug("Programa recibido: {}", nuevo);
		logger.debug("Dependencia recibida: {}", idDependencia);
		
		DependenciaEO dependencia;
		dependencia = new DependenciaEO();
		dependencia.setId(idDependencia);
		nuevo.setDependencia(dependencia);
		
		if(nuevo.getProgramaPadre()==null){
			ProgramaEO programa = new ProgramaEO();
			nuevo.setProgramaPadre(programa);
		}
		
		sqlSession.insert("catalogos.programas.insertar", nuevo);
		
		logger.debug("El programa se guardo correctamente");
		
		return nuevo;
	}
	
	public void eliminarPrograma(ProgramaEO programa){
		logger.debug("Programa recibido: {}", programa);
		
		//Eliminamos_los_ejercicios_pertenecientes_al_programa
		Modelo<ProgramaEjercicioEO> modeloEjercicios;
		modeloEjercicios = programasEjerciciosC.modelo(programa);
		
		if(!modeloEjercicios.getListado().isEmpty()){
			for(ProgramaEjercicioEO obj : modeloEjercicios.getListado()){
				programasEjerciciosC.eliminarEjercicio(obj);
			}
		}
		
		logger.debug("Se eliminaron todos los ejercicios de este programa");
		
		sqlSession.delete("catalogos.programas.eliminarPrograma", programa.getId());
		
		logger.debug("Sel elimino el programa correctamente");
	}

}
