package com.saganet.politik.component_dm.estadisticas;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.saganet.politik.dominios_dm.RegionesDO;

@Component("EstadisticasSincronizacionC")
public class EstadisticasC {
	
	@Autowired
	SqlSession sqlSessionDM;
	
	private static final Logger logger = LoggerFactory.getLogger(EstadisticasC.class);
	
	public List<HashMap<String, Object>> listadoPorUsuarioRegion(Integer idRegion, String usuario, String nombre, String imei){
		List<HashMap<String, Object>> listado;
		HashMap<String, Object> params = new HashMap<>();
		params.put("idRegion", idRegion);
		params.put("usuario", usuario);
		params.put("nombre", nombre);
		params.put("imei", imei);
		listado = sqlSessionDM.selectList("estadisticas.estadisticas.porUsuarioRegion", params);
		logger.debug("Listado de estadisticas por usuario y region: {}", listado);
		return listado;
	}
	
	public List<HashMap<String, Object>> listadoPorFechas(String fechaInicio, String fechaFin){
		List<HashMap<String, Object>> listado;
		HashMap<String, Object> params;
		params = new HashMap<>();
		params.put("fechaInicio", fechaInicio);
		params.put("fechaFin", fechaFin);
		listado = sqlSessionDM.selectList("estadisticas.estadisticas.porFechas", params);
		logger.debug("Listado de estadisticas por fecha: {}", listado);
		return listado;
	}
	
	public List<HashMap<String, Object>> listadoPorRegiones(){
		List<HashMap<String, Object>> listado;
		List<HashMap<String, Object>> listadoFinal = new ArrayList<>();
		listado = sqlSessionDM.selectList("estadisticas.estadisticas.porRegiones");
		
		for(HashMap<String, Object> map : listado){
			HashMap<String, Object> map2 = new HashMap<>();
			map2.put("region", regiones()[Integer.parseInt(map.get("region").toString())-1].getNombre());
			map2.put("num", map.get("num"));
			listadoFinal.add(map2);
		}
		
		logger.debug("Listado de estadisticas por Region: {}", listadoFinal);
		return listadoFinal;
	}
	
	public RegionesDO[] regiones(){
		logger.debug("Se genera listado de Regiones");
		return RegionesDO.values();
	}
	
	public Date getFecha(){
		return new Date();
	}
	
	public String combierteDateToString(Date fecha){
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String result = df.format(fecha);
		return result;
	}
	
	public Integer calculaTotalEncuestas(List<HashMap<String, Object>> listado){
		Integer total = 0;
		for(HashMap<String, Object> map : listado){
			total = total + Integer.parseInt(map.get("num").toString());
		}
		return total;
	}
	
}
